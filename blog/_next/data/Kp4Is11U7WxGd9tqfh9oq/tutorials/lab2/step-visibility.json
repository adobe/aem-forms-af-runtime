{"pageProps":{"post":{"title":"Headless Adaptive Form : Creating a Multi Language Multistep Form","date":"2020-03-16T05:35:07.322Z","slug":["lab2","step-visibility"],"content":"\n# Enable the wizard experience\n\nIf you will notice all the tabs are visible and one can navigate from one step to another. The steps below will enable the experience where one step will be visible at a time and upon validation user will be able to navigate to the next step\n\n## Make all the panels hidden except the first\n\nWe need to add the visible property to all the panels `step2`, `loanDetails` and `accountDetails`\n\n```codeDiff\n/assets/tutorial/lab2/json/loan-form-tabs.form.json;/assets/tutorial/lab2/json/visible-tabs-1.form.json\n```\n\n![Image](/assets/tutorial/lab2/loan-form-visible.png)\n\n\nBut now we are not able to navigate to the any of the panels. The next step will enable navigation between the different panels on click of a button\n\n## Trigger a custom event to show/hide steps\n\nIn this particular use case we need to show the OTP tab after clicks on the `View Loan Eligibility` button. To do that, we need to \n\n1. trigger an event on click of the button\n\n```json\n\"events\": {\n    \"click\" : \"dispatchEvent('custom:verifyOTP')\"\n}\n```\n\nThe `dispatchEvent` API takes an event name and triggers it on the entire form.\n\n2. add a listener of that event on the panel `step2` and make that panel visible\n\n```json\n\"events\" : {\n    \"custom:verifyOTP\" : \"{visible : true()}\"\n},\n```\n\nIn AF Definition, the event handlers return an object. That object is mapped to the properties of the field. So in the snippet above, whenever the event `custom:verifyOTP` is triggered, the handler will return an object indicating  set the `visible` property of the field to `true`. Any number of propertis can be returned from the event handler. For instance if we want to change the label and disable a field on an event the snippet would be\n\n```json\n\"events\" : {\n    \"event\" : \"{enable : false(), label : {value : 'new label'}}\"\n},\n```\n\n```codeDiff\n/assets/tutorial/lab2/json/visible-tabs-1.form.json;/assets/tutorial/lab2/json/visible-tabs-2.form.json\n```\n\n## Add validation before moving to next step\n\nThe Form Specification provides a function `validate` to validate entire form or a Panel. The API returns an array of\nerror messages along with the fields that failed validations. We can add the snippet below to the button to \ndispatch the event only if the validation succeeds\n\n```json\n\"events\" : {\n    \"click\" : \"if(length(validate($parent)) == 0, dispatchEvent('custom:verifyOTP'),{})\"\n},\n```\n\n```codeDiff\n/assets/tutorial/lab2/json/visible-tabs-2.form.json;/assets/tutorial/lab2/json/visible-tabs-3.form.json\n```\n","toc":[{"level":1,"text":"Enable the wizard experience","id":"enable-the-wizard-experience"},{"level":2,"text":"Make all the panels hidden except the first","id":"make-all-the-panels-hidden-except-the-first"},{"level":2,"text":"Trigger a custom event to show/hide steps","id":"trigger-a-custom-event-to-show-hide-steps"},{"level":2,"text":"Add validation before moving to next step","id":"add-validation-before-moving-to-next-step"}],"nextTitle":"Finishing the form","nextSlug":["lab2","finishing-touches"],"prevTitle":"Enable Tabbed Layout for the Form","prevSlug":["lab2","add-step-form"],"subTitle":"One Step visible at a time","kind":"tutorials"}},"__N_SSG":true}